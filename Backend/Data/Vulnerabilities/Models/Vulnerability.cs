

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace SabaFone.Backend.Data.Vulnerabilities.Models
{
    public class Vulnerability
    {
        [Key]
        public Guid VulnerabilityId { get; set; } = Guid.NewGuid();

        [Required]
        [MaxLength(200)]
        public string Title { get; set; }

        [MaxLength(2000)]
        public string Description { get; set; }

        [Required]
        [MaxLength(20)]
        public string Severity { get; set; } // Critical, High, Medium, Low

        [Required]
        [MaxLength(20)]
        public string Status { get; set; } // Open, InProgress, Resolved, Closed

        [MaxLength(50)]
        public string Type { get; set; } // SQL Injection, XSS, etc.

        [MaxLength(50)]
        public string CVEIdentifier { get; set; }

        [Column(TypeName = "decimal(3,1)")]
        public decimal? CVSSScore { get; set; }

        [MaxLength(200)]
        public string AffectedSystem { get; set; }

        [MaxLength(200)]
        public string AffectedComponent { get; set; }

        public string AffectedVersions { get; set; } // JSON array
        public string ExploitDetails { get; set; }
        public string AttackVector { get; set; }
        public string Impact { get; set; }

        [MaxLength(2000)]
        public string RemediationPlan { get; set; }

        [MaxLength(20)]
        public string RemediationStatus { get; set; } // NotStarted, InProgress, Completed

        public int RemediationProgress { get; set; } = 0; // Percentage

        [Column(TypeName = "decimal(5,2)")]
        public decimal? RiskScore { get; set; }

        public bool IsExploitable { get; set; } = false;
        public bool IsPatched { get; set; } = false;
        public bool IsVerified { get; set; } = false;

        public int AffectedAssets { get; set; } = 0;

        [Column(TypeName = "decimal(10,2)")]
        public decimal? EstimatedEffort { get; set; } // Hours

        [MaxLength(100)]
        public string DiscoveredBy { get; set; }

        public DateTime DiscoveredAt { get; set; } = DateTime.UtcNow;
        public DateTime? DueDate { get; set; }
        public DateTime? ResolvedAt { get; set; }
        public DateTime? VerifiedAt { get; set; }

        public Guid? AssignedTo { get; set; }
        public Guid? ResolvedBy { get; set; }
        public Guid? VerifiedBy { get; set; }

        public string References { get; set; } // JSON array of reference URLs
        public string Attachments { get; set; } // JSON array of attachment paths

        // Navigation properties
        public virtual Users.Models.User AssignedToUser { get; set; }
    }
}