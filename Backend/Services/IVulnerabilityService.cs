using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using SabaFone.Backend.Data.Vulnerabilities.Models;

namespace SabaFone.Backend.Services
{
    public interface IVulnerabilityService
    {
        // Vulnerability Management
        Task<Vulnerability> CreateVulnerabilityAsync(Vulnerability vulnerability);
        Task<Vulnerability> GetVulnerabilityAsync(Guid vulnerabilityId);
        Task<List<Vulnerability>> GetActiveVulnerabilitiesAsync();
        Task<bool> UpdateVulnerabilityStatusAsync(Guid vulnerabilityId, string status);
        
        // Risk Assessment
        Task<double> CalculateRiskScoreAsync(Guid vulnerabilityId);
        Task<string> AssessVulnerabilitySeverityAsync(Vulnerability vulnerability);
        Task<Dictionary<string, object>> PerformRiskAnalysisAsync(List<Guid> vulnerabilityIds);
        
        // Remediation
        Task<bool> CreateRemediationPlanAsync(Guid vulnerabilityId, Dictionary<string, object> plan);
        Task<bool> TrackRemediationProgressAsync(Guid vulnerabilityId, int progressPercentage);
        Task<List<object>> GetRemediationRecommendationsAsync(Guid vulnerabilityId);
        
        // Reporting
        Task<Dictionary<string, object>> GetVulnerabilityStatisticsAsync();
        Task<byte[]> GenerateVulnerabilityReportAsync(DateTime startDate, DateTime endDate);
        Task<List<object>> GetVulnerabilityTrendsAsync(int monthsBack = 6);
        
        // Integration
        Task<bool> ImportVulnerabilitiesFromScannerAsync(string scannerType, byte[] scanResults);
        Task<bool> SyncWithCveDatabase();
        Task<List<object>> GetLatestCveEntriesAsync(int count = 100);
    }
}